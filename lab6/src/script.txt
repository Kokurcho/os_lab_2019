https://sun9-21.userapi.com/impg/V4H_bUPOf49g7EP2vCyl3HcIpBCPNugu-CGusw/8FjN1BereMY.jpg?size=834x483&quality=96&sign=81f37d6cfdb0ffe1d9cd3284732f2ef5&type=album

https://sun9-10.userapi.com/impg/aJqFTIuvG6MuryPoNT8CV7nP45OBni6CZ9jp_g/Hb3MCZNLFpA.jpg?size=828x371&quality=96&sign=2f0dc862322a250ad94915a5367b1e57&type=album

Любой протокол, который не устанавливает предварительное соединение — называется датаграммным.
UDP Позволяет отправлять информацию (датаграммы) по IP-сети без предварительного установления соединения и создания специального виртуального канала или путей данных

make -f makefile clean
//Именуется сокет с помощью системного вызова bind
//Далее серверный процесс ждет подключения клиента к именованному сокету. Системный вызов listen формирует очередь входящих подключений
  //Сервер может принять их с помощью системного вызова accept
//Когда сервер вызывает accept, создается новый сокет, отличающийся от именованного сокета. Этот новый сокет применяется только для взаимодействия с данным конкретным клиентом. Именованный сокет сохраняется для дальнейших подключений других клиентов.


struct sockaddr_in server;
    //sa_family_t    sin_family; /* address family: AF_INET */
    //in_port_t      sin_port;   /* port in network byte order */
    //struct in_addr sin_addr;   /* internet address */
//конвертер в 64-разрядное целое число без знака
//errno – переменная, хранящая целочисленный код последней ошибки
    //ERANGE – (Error range) результат слишком велик.
    //strtoull - конвертирует строку в беззнаковое целое число
    //(протокл IPv4, надёжная передача данных, протокол по умолчанию)
   //Функция возвращает −1 в случае ошибки. Иначе, она возвращает целое число, представляющее присвоенный дескриптор.
  //Функция служит для чтения данных из сокета.
    //Прототип:
    //int recv(int s, char * buf, int len, int flags);
    ////Первый аргумент - сокет-дескриптор, из которого читаются данные. Второй и третий аргументы - соответственно, адрес и длина буфера для записи читаемых данных. Четвертый параметр - это комбинация битовых флагов, управляющих режимами чтения. Если аргумент flags равен нулю, то считанные данные удаляются из сокета.  
     //Функция htons() преобразует узловой порядок расположения байтов положительного короткого целого hostshort в сетевой порядок расположения байтов.


Socket 	Создать новый сокет и вернуть файловый дескриптор
Send 	Отправить данные по сети
Receive 	Получить данные из сети
Close 	Закрыть соединение
  	 	 
Bind 	Связать сокет с IP-адресом и портом
Listen 	Объявить о желании принимать соединения. Слушает порт и ждет когда будет установлено соединение
Accept 	Принять запрос на установку соединения
  	 	 
Connect 	Установить соединение